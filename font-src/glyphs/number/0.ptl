$$include '../../meta/macros.ptl'

import [mix linreg clamp fallback] from"../../support/utils.mjs"
import [AnyCv getGrMesh VS01] from"../../support/gr.mjs"

glyph-module

glyph-block Digits-Zero : begin
	glyph-block-import CommonShapes
	glyph-block-import Common-Derivatives
	glyph-block-import Digits-Shared : OnumHeight OnumMarks CodeLnum CodeOnum

	define CircleInnerWidth : RightSB - SB - HVContrast * Stroke * 2
	define SplitSlashGap : Stroke * HVContrast + [clamp (CircleInnerWidth / 5) (CircleInnerWidth / 3) ([AdviceStroke 5] * HVContrast)]
	define CutoutVerticalStrokeWidth : Math.max (0.2 * CircleInnerWidth) : Math.min (0.4 * CircleInnerWidth) [AdviceStroke 3]
	define [CutoutStrokeWidth top] : Math.max (0.1 * top) : Math.min (0.125 * top) (0.5 * CircleInnerWidth) [AdviceStroke 3]

	define [OvalShapeT sink t b l r pHAdj] : let [m : mix l r 0.5] : sink
		widths.rhs
		g4 (m - [fallback pHAdj 1] * CorrectionOMidS) (t - O)
		archv
		g4 r [YSmoothMidR t b SmallArchDepthA SmallArchDepthB]
		arcvh
		g4 (m + [fallback pHAdj 1] * CorrectionOMidS) (b + O)
		archv
		g4 l [YSmoothMidL t b SmallArchDepthA SmallArchDepthB]
		arcvh
		close

	define [ZeroOutlineShapeT sink offsetX offsetY top] : OShapeT sink (top - offsetY) (offsetY) (SB + offsetX) (RightSB - offsetX)
	define [ZeroOutlineShape top] : ZeroOutlineShapeT dispiro 0 0 top
	define [ZeroOutlineMask top] : ZeroOutlineShapeT spiro-outline 1 1 top

	define [ZeroOvalShapeT sink offsetX offsetY top] : OvalShapeT sink (top - offsetY) (offsetY) (SB + offsetX) (RightSB - offsetX)
	define [ZeroOvalShape top] : ZeroOvalShapeT dispiro 0 0 top
	define [ZeroOvalMask top] : ZeroOvalShapeT spiro-outline 1 1 top


	define [InsetShape zero overlay fnMask height] : glyph-proc
		include zero
		if fnMask
			include : intersection overlay
				WithTransform [ApparentTranslate (-SplitSlashGap) 0] [fnMask height]
				WithTransform [ApparentTranslate   SplitSlashGap  0] [fnMask height]
			include overlay

	define [Cutout zero overlay fnMask height] : glyph-proc
		if overlay
			include : difference zero overlay
			include zero


	define [ZeroSlash top] : dispiro
		flat 0     (top * (1 - 0.77)) [widths.center OverlayStroke]
		curl Width (top * 0.77)
	define [ZeroRevSlash top] : dispiro
		flat 0     (top * 0.77) [widths.center OverlayStroke]
		curl Width (top * (1 - 0.77))

	define [ZeroTallSlash top] : dispiro
		flat 0     0   [widths.center OverlayStroke]
		curl Width top
	define [ZeroTallRevSlash top] : dispiro
		flat 0     top [widths.center OverlayStroke]
		curl Width 0

	define [CutoutSlash top] : dispiro
		flat 0     (top * (1 - 0.77)) [widths.center [CutoutStrokeWidth top]]
		curl Width (top * 0.77)
	define [CutoutRevSlash top] : dispiro
		flat 0     (top * 0.77)       [widths.center [CutoutStrokeWidth top]]
		curl Width (top * (1 - 0.77))

	define [CutoutTallSlash top] : dispiro
		flat 0     0   [widths.center [CutoutStrokeWidth top]]
		curl Width top
	define [CutoutTallRevSlash top] : dispiro
		flat 0     top [widths.center [CutoutStrokeWidth top]]
		curl Width 0

	define [CutoutVerticalBar top] : VBar.m Middle (0 + O) (top - O) CutoutVerticalStrokeWidth

	define [TopRightCutoutSlash top] : intersection
		MaskRight Middle
		dispiro
			flat 0               (top - Width * 0.875) [widths.center [CutoutStrokeWidth top]]
			curl (Width * 0.875) top

	define [BrokenTallSlash top] : difference
		dispiro
			flat (SB + OX + 0.5 * OverlayStroke)      [mix top 0 1.05] [widths.center OverlayStroke]
			curl (RightSB - OX - 0.5 * OverlayStroke) [mix 0 top 1.05]
		intersection
			MaskAbove (top * 0.425)
			MaskBelow (top * (1 - 0.425))
	define [BrokenTallRevSlash top] : difference
		dispiro
			flat (SB + OX + 0.5 * OverlayStroke)      [mix 0 top 1.05] [widths.center OverlayStroke]
			curl (RightSB - OX - 0.5 * OverlayStroke) [mix top 0 1.05]
		intersection
			MaskAbove (top * 0.425)
			MaskBelow (top * (1 - 0.425))

	define [BrokenVerticalBar top] : difference
		VBar.m Middle (0 + O) (top - O) [Math.min (CircleInnerWidth * 0.5) OverlayStroke]
		intersection
			MaskAbove (top * 0.375)
			MaskBelow (top * (1 - 0.375))

	define [ZeroDotShape top] : begin
		local halfDotWidth : Math.min DotRadius (CircleInnerWidth / 4)
		return : OShapeOutline.NoOvershoot
			top / 2 + DotRadius
			top / 2 - DotRadius
			Middle + halfDotWidth
			Middle - halfDotWidth
			Stroke * halfDotWidth * 2 / Width
			ArchDepthAOf halfDotWidth (halfDotWidth * 2)
			ArchDepthBOf halfDotWidth (halfDotWidth * 2)

	define [ZeroLongDotShape top] : begin
		local halfDotWidth : Math.min HalfStroke (CircleInnerWidth / 4)
		local halfDotHeight : Math.max DotRadius : Math.min ((top - Stroke * 2) / 4) ((top - Stroke * 2 - (CircleInnerWidth - halfDotWidth * 2)) / 2)
		return : OShapeOutline.NoOvershoot
			top / 2 + halfDotHeight
			top / 2 - halfDotHeight
			Middle + halfDotWidth
			Middle - halfDotWidth
			Stroke * halfDotWidth * 2 / Width
			ArchDepthAOf halfDotWidth (halfDotWidth * 2)
			ArchDepthBOf halfDotWidth (halfDotWidth * 2)

	define [ZeroOvalDotShape top] : begin
		local halfDotWidth : Math.min DotRadius (CircleInnerWidth / 4)
		return : OvalShapeT spiro-outline
			top / 2 + DotRadius - O
			top / 2 - DotRadius + O
			Middle - halfDotWidth + OX
			Middle + halfDotWidth - OX
			begin 0

	define [ZeroOvalLongDotShape top] : begin
		local halfDotWidth : Math.min HalfStroke (CircleInnerWidth / 4)
		local halfDotHeight : Math.max DotRadius : Math.min ((top - Stroke * 2) / 4) ((top - Stroke * 2 - (CircleInnerWidth - halfDotWidth * 2)) / 2)
		return : OvalShapeT spiro-outline
			top / 2 + halfDotHeight - O
			top / 2 - halfDotHeight + O
			Middle - halfDotWidth + OX
			Middle + halfDotWidth - OX
			begin 0

	define ZeroConfig : object
		'unslashed'                    { null                 null       }
		'slashed'                      { ZeroSlash            null       }
		'reverseSlashed'               { ZeroRevSlash         null       }
		'tallSlashed'                  { ZeroTallSlash        null       }
		'tallReverseSlashed'           { ZeroTallRevSlash     null       }
		'dotted'                       { ZeroDotShape         null       }
		'longDotted'                   { ZeroLongDotShape     null       }
		'slashedSplit'                 { ZeroSlash            InsetShape }
		'reverseSlashedSplit'          { ZeroRevSlash         InsetShape }
		'brokenSlash'                  { BrokenTallSlash      null       }
		'brokenReverseSlash'           { BrokenTallRevSlash   null       }
		'brokenVerticalBar'            { BrokenVerticalBar    null       }
		'slashedCutout'                { CutoutSlash          Cutout     }
		'reverseSlashedCutout'         { CutoutRevSlash       Cutout     }
		'tallSlashedCutout'            { CutoutTallSlash      Cutout     }
		'tallReverseSlashedCutout'     { CutoutTallRevSlash   Cutout     }
		'verticalBarCutout'            { CutoutVerticalBar    Cutout     }
		'topRightCutout'               { TopRightCutoutSlash  Cutout     }

	define Shapes : object
		''     { ZeroOutlineShape ZeroOutlineMask }
		'Oval' { ZeroOvalShape    ZeroOvalMask    }

	define Infixes : object
		'lnum' { CAP        [function [] : MarkSet.capital] }
		'onum' { OnumHeight [function [] : OnumMarks.e]     }

	foreach { shapeSuffix { Outline Mask } } [Object.entries Shapes] : begin
		foreach { infix { height Marks } } [Object.entries Infixes] : begin
			local zeroShape : Outline height
			foreach { suffix { Overlay Postproc } } [Object.entries ZeroConfig] : begin
				create-glyph "zero.\(infix).\(suffix)\(shapeSuffix)" : glyph-proc
					include : Marks

					local overlayShape : if Overlay [Overlay height] null
					if Postproc
					: then : begin
						include : Postproc zeroShape overlayShape Mask height
					: else : begin
						include zeroShape
						if Overlay : if Mask
							include : intersection overlayShape : Mask height
							include overlayShape

	select-variant 'zero.lnum' [CodeLnum '0'] (follow -- 'zero')
	select-variant 'zero.onum' [CodeOnum '0'] (follow -- 'zero')
	select-variant 'zero.lnum/forceSlashed' (follow -- 'zero/forceSlashed') (shapeFrom -- 'zero.lnum')
	select-variant 'zero.onum/forceSlashed' (follow -- 'zero/forceSlashed') (shapeFrom -- 'zero.onum')
	select-variant 'zero.lnum/forceUnslashed' (follow -- 'zero/forceUnslashed') (shapeFrom -- 'zero.lnum')
	select-variant 'zero.onum/forceUnslashed' (follow -- 'zero/forceUnslashed') (shapeFrom -- 'zero.onum')

	alias 'cv76 0xEF00' 0xEF00 'zero.lnum.unslashed'
	alias 'cv76 0xEF01' 0xEF01 'zero.lnum.slashed'
	alias 'cv76 0xEF02' 0xEF02 'zero.lnum.reverseSlashed'
	alias 'cv76 0xEF03' 0xEF03 'zero.lnum.tallSlashed'
	alias 'cv76 0xEF04' 0xEF04 'zero.lnum.tallReverseSlashed'
	alias 'cv76 0xEF05' 0xEF05 'zero.lnum.slashedSplit'
	alias 'cv76 0xEF06' 0xEF06 'zero.lnum.reverseSlashedSplit'
	alias 'cv76 0xEF07' 0xEF07 'zero.lnum.brokenSlash'
	alias 'cv76 0xEF08' 0xEF08 'zero.lnum.brokenReverseSlash'
	alias 'cv76 0xEF09' 0xEF09 'zero.lnum.brokenVerticalBar'
	alias 'cv76 0xEF0A' 0xEF0A 'zero.lnum.dotted'
	alias 'cv76 0xEF0B' 0xEF0B 'zero.lnum.longDotted'
	alias 'cv76 0xEF0C' 0xEF0C 'zero.lnum.slashedCutout'
	alias 'cv76 0xEF0D' 0xEF0D 'zero.lnum.reverseSlashedCutout'
	alias 'cv76 0xEF0E' 0xEF0E 'zero.lnum.tallSlashedCutout'
	alias 'cv76 0xEF0F' 0xEF0F 'zero.lnum.tallReverseSlashedCutout'
	alias 'cv76 0xEF10' 0xEF10 'zero.lnum.verticalBarCutout'
	alias 'cv76 0xEF11' 0xEF11 'zero.lnum.topRightCutout'
	alias 'cv76 0xEF12' 0xEF12 'zero.lnum.unslashedOval'
	alias 'cv76 0xEF13' 0xEF13 'zero.lnum.slashedOval'
	alias 'cv76 0xEF14' 0xEF14 'zero.lnum.reverseSlashedOval'
	alias 'cv76 0xEF15' 0xEF15 'zero.lnum.tallSlashedOval'
	alias 'cv76 0xEF16' 0xEF16 'zero.lnum.tallReverseSlashedOval'
	alias 'cv76 0xEF17' 0xEF17 'zero.lnum.slashedSplitOval'
	alias 'cv76 0xEF18' 0xEF18 'zero.lnum.reverseSlashedSplitOval'
	alias 'cv76 0xEF19' 0xEF19 'zero.lnum.brokenSlashOval'
	alias 'cv76 0xEF1A' 0xEF1A 'zero.lnum.brokenReverseSlashOval'
	alias 'cv76 0xEF1B' 0xEF1B 'zero.lnum.brokenVerticalBarOval'
	alias 'cv76 0xEF1C' 0xEF1C 'zero.lnum.dottedOval'
	alias 'cv76 0xEF1D' 0xEF1D 'zero.lnum.longDottedOval'
	alias 'cv76 0xEF1E' 0xEF1E 'zero.lnum.slashedCutoutOval'
	alias 'cv76 0xEF1F' 0xEF1F 'zero.lnum.reverseSlashedCutoutOval'
	alias 'cv76 0xEF20' 0xEF20 'zero.lnum.tallSlashedCutoutOval'
	alias 'cv76 0xEF21' 0xEF21 'zero.lnum.tallReverseSlashedCutoutOval'
	alias 'cv76 0xEF22' 0xEF22 'zero.lnum.verticalBarCutoutOval'
	alias 'cv76 0xEF23' 0xEF23 'zero.lnum.topRightCutoutOval'
	alias 'cv76 0xEF24' 0xEF24 'zero.onum.unslashed'
	alias 'cv76 0xEF25' 0xEF25 'zero.onum.slashed'
	alias 'cv76 0xEF26' 0xEF26 'zero.onum.reverseSlashed'
	alias 'cv76 0xEF27' 0xEF27 'zero.onum.tallSlashed'
	alias 'cv76 0xEF28' 0xEF28 'zero.onum.tallReverseSlashed'
	alias 'cv76 0xEF29' 0xEF29 'zero.onum.slashedSplit'
	alias 'cv76 0xEF2A' 0xEF2A 'zero.onum.reverseSlashedSplit'
	alias 'cv76 0xEF2B' 0xEF2B 'zero.onum.brokenSlash'
	alias 'cv76 0xEF2C' 0xEF2C 'zero.onum.brokenReverseSlash'
	alias 'cv76 0xEF2D' 0xEF2D 'zero.onum.brokenVerticalBar'
	alias 'cv76 0xEF2E' 0xEF2E 'zero.onum.dotted'
	alias 'cv76 0xEF2F' 0xEF2F 'zero.onum.longDotted'
	alias 'cv76 0xEF30' 0xEF30 'zero.onum.slashedCutout'
	alias 'cv76 0xEF31' 0xEF31 'zero.onum.reverseSlashedCutout'
	alias 'cv76 0xEF32' 0xEF32 'zero.onum.tallSlashedCutout'
	alias 'cv76 0xEF33' 0xEF33 'zero.onum.tallReverseSlashedCutout'
	alias 'cv76 0xEF34' 0xEF34 'zero.onum.verticalBarCutout'
	alias 'cv76 0xEF35' 0xEF35 'zero.onum.topRightCutout'
	alias 'cv76 0xEF36' 0xEF36 'zero.onum.unslashedOval'
	alias 'cv76 0xEF37' 0xEF37 'zero.onum.slashedOval'
	alias 'cv76 0xEF38' 0xEF38 'zero.onum.reverseSlashedOval'
	alias 'cv76 0xEF39' 0xEF39 'zero.onum.tallSlashedOval'
	alias 'cv76 0xEF3A' 0xEF3A 'zero.onum.tallReverseSlashedOval'
	alias 'cv76 0xEF3B' 0xEF3B 'zero.onum.slashedSplitOval'
	alias 'cv76 0xEF3C' 0xEF3C 'zero.onum.reverseSlashedSplitOval'
	alias 'cv76 0xEF3D' 0xEF3D 'zero.onum.brokenSlashOval'
	alias 'cv76 0xEF3E' 0xEF3E 'zero.onum.brokenReverseSlashOval'
	alias 'cv76 0xEF3F' 0xEF3F 'zero.onum.brokenVerticalBarOval'
	alias 'cv76 0xEF40' 0xEF40 'zero.onum.dottedOval'
	alias 'cv76 0xEF41' 0xEF41 'zero.onum.longDottedOval'
	alias 'cv76 0xEF42' 0xEF42 'zero.onum.slashedCutoutOval'
	alias 'cv76 0xEF43' 0xEF43 'zero.onum.reverseSlashedCutoutOval'
	alias 'cv76 0xEF44' 0xEF44 'zero.onum.tallSlashedCutoutOval'
	alias 'cv76 0xEF45' 0xEF45 'zero.onum.tallReverseSlashedCutoutOval'
	alias 'cv76 0xEF46' 0xEF46 'zero.onum.verticalBarCutoutOval'
	alias 'cv76 0xEF47' 0xEF47 'zero.onum.topRightCutoutOval'

	if [query-glyph 'zero.lnum'] : VS01.set [query-glyph 'zero.lnum'] 'zero.lnum/forceSlashed'
	if [query-glyph 'zero.onum'] : VS01.set [query-glyph 'zero.onum'] 'zero.onum/forceSlashed'

	glyph-block-import Letter-Blackboard : BBS BBD
	create-glyph 'mathbb/zero' 0x1D7D8 : glyph-proc
		include : MarkSet.capital
		include : OShape CAP 0 SB RightSB BBS
		include : intersection
			OShapeOutline.NoOvershoot CAP 0 SB RightSB BBS
			union
				VBar.l  (SB + OX + BBD)      0 CAP BBS
				VBar.r (RightSB - OX - BBD) 0 CAP BBS
				intersection
					Rect CAP 0 (SB + BBD) (RightSB - BBD)
					dispiro
						flat 0 (CAP * (1 - 0.77)) [widths.center BBS]
						curl Width (CAP * 0.77)
