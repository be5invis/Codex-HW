$$include '../../meta/macros.ptl'

import [mix linreg clamp fallback] from "@iosevka/util"

glyph-module

glyph-block Symbol-Pictograph-Schematic : for-width-kinds WideWidth4 : begin
	glyph-block-import CommonShapes
	glyph-block-import Common-Derivatives
	glyph-block-import Shared-Symbol-Shapes : TriangleShape
	glyph-block-import Symbol-Geometric-Shared : GeometricDim

	define top     fontMetrics.os2.sTypoAscender
	define bottom  fontMetrics.os2.sTypoDescender
	define left    0
	define right   MosaicWidth

	define midx : mix left right 0.5
	define midy : mix bottom top 0.5
	define MosaicHeight : top - bottom

	define Geom : GeometricDim MosaicUnitWidth MosaicWidth

	define boxDrawingStroke : AdviceStroke 3.5
	define fineStroke : AdviceStroke 3.5 : Math.sqrt (MosaicWidthScalar / 2)
	define gateSize : MosaicHeight / 2
	define gateBot : midy - gateSize
	define gateTop : midy + gateSize
	define ringSize : Math.min (Geom.Size * 0.5) (MosaicWidth / 6)
	define [InvertRingAt x y fMask] : [if fMask spiro-outline dispiro]
		if fMask {} : list
			widths.rhs fineStroke
		g4 x (y - ringSize)
		archv 32 2.0
		g4 (x - ringSize) y
		arcvh 32 2.0
		g4 x (y + ringSize)
		archv 32 2.0
		g4 (x + ringSize) y
		arcvh 32 2.0
		close

	do "Explosion at Horizon"
		define horizon : Geom.MidY - Geom.Size * 0.8
		create-glyph [MangleName 'explosionHorizon'] [MangleUnicode 0x1CE02] : glyph-proc
			set-width MosaicWidth
			include : HBar.m Geom.Left Geom.Right horizon boxDrawingStroke
			include : dispiro
				widths.center fineStroke
				corner (Geom.MidX - Geom.Size * 0.8) (horizon + Geom.Size * 0.7)
				corner (Geom.MidX - Geom.Size * 0.4) (horizon + Geom.Size * 0.3)
			include : dispiro
				widths.center fineStroke
				corner (Geom.MidX + Geom.Size * 0.8) (horizon + Geom.Size * 0.7)
				corner (Geom.MidX + Geom.Size * 0.4) (horizon + Geom.Size * 0.3)
			include : dispiro
				widths.center fineStroke
				corner (Geom.MidX - Geom.Size * 0.4) (horizon + Geom.Size * 1.4)
				corner (Geom.MidX - Geom.Size * 0.2) (horizon + Geom.Size * 0.4)
			include : dispiro
				widths.center fineStroke
				corner (Geom.MidX + Geom.Size * 0.4) (horizon + Geom.Size * 1.4)
				corner (Geom.MidX + Geom.Size * 0.2) (horizon + Geom.Size * 0.4)

	do "Funnel"
		create-glyph [MangleName 'funnel'] [MangleUnicode 0x1CE08] : glyph-proc
			set-width MosaicWidth
			include : ForceUpright
			include : TriangleShape Geom.Left Geom.Top Geom.Right Geom.Top Geom.MidX Geom.Bot boxDrawingStroke
			include : VBar.m midx bottom (Geom.Bot + boxDrawingStroke * 2) boxDrawingStroke

	do "Antenna"
		define rodLeft  : Geom.Left  + [HSwToV : boxDrawingStroke / 2]
		define rodRight : Geom.Right - [HSwToV : boxDrawingStroke / 2]
		define rodTop Geom.Top
		create-glyph [MangleName 'antenna'] [MangleUnicode 0x1CC08] : glyph-proc
			set-width MosaicWidth
			include : ForceUpright
			include : VBar.m midx bottom rodTop boxDrawingStroke
			include : intersection
				MaskBelow rodTop
				union
					dispiro
						widths.center boxDrawingStroke
						corner [mix midx rodLeft 2] [mix midy rodTop 2]
						corner midx midy
					dispiro
						widths.center boxDrawingStroke
						corner [mix midx rodRight 2] [mix midy rodTop 2]
						corner midx midy


	do "Diode"
		define diodeGap : MosaicWidth / 9
		define diodeLeft : left + diodeGap
		define diodeRight : right - diodeGap

		create-glyph [MangleName 'diodeLeft'] [MangleUnicode 0x1CC0E] : glyph-proc
			set-width MosaicWidth
			include : ForceUpright
			include : HBar.m left diodeLeft midy boxDrawingStroke
			include : HBar.m diodeRight right midy boxDrawingStroke
			include : VBar.l diodeLeft gateBot gateTop boxDrawingStroke
			include : TriangleShape diodeLeft midy diodeRight gateTop diodeRight gateBot boxDrawingStroke

		create-glyph [MangleName 'diodeRight'] [MangleUnicode 0x1CC0F] : glyph-proc
			set-width MosaicWidth
			include : ForceUpright
			include : HBar.m left diodeLeft midy boxDrawingStroke
			include : HBar.m diodeRight right midy boxDrawingStroke
			include : VBar.r diodeRight gateBot gateTop boxDrawingStroke
			include : TriangleShape diodeLeft gateBot diodeLeft gateTop diodeRight midy boxDrawingStroke

	do "Receptacle"
		create-glyph [MangleName 'receptacle'] [MangleUnicode 0x1CC12] : glyph-proc
			set-width MosaicWidth
			include : ForceUpright
			include : refer-glyph : MangleName : NameUni 0x1FBDB
			include : refer-glyph : MangleName : NameUni 0x2576

	do "Capacitor"
		define capacitorSize Geom.Size
		define capacitorGap : Geom.Size / 4

		create-glyph [MangleName 'capacitorHori'] [MangleUnicode 0x1CC13] : glyph-proc
			set-width MosaicWidth
			include : ForceUpright
			include : HBar.m left (midx - capacitorGap) midy boxDrawingStroke
			include : VBar.r (midx - capacitorGap) (midy - capacitorSize) (midy + capacitorSize) boxDrawingStroke
			include : VBar.l (midx + capacitorGap) (midy - capacitorSize) (midy + capacitorSize) boxDrawingStroke
			include : HBar.m (midx + capacitorGap) right midy boxDrawingStroke

		create-glyph [MangleName 'capacitorVert'] [MangleUnicode 0x1CC14] : glyph-proc
			set-width MosaicWidth
			include : ForceUpright
			include : VBar.m midx bottom (midy - capacitorGap) boxDrawingStroke
			include : HBar.t (midx - capacitorSize) (midx + capacitorSize) (midy - capacitorGap) boxDrawingStroke
			include : HBar.b (midx - capacitorSize) (midx + capacitorSize) (midy + capacitorGap) boxDrawingStroke
			include : VBar.m midx (midy + capacitorGap) top boxDrawingStroke

	do "Rings"
		create-glyph [MangleName 'twoRings'] [MangleUnicode 0x1CC88] : glyph-proc
			set-width MosaicWidth
			include : ForceUpright
			include : InvertRingAt (left + ringSize) midy
			include : InvertRingAt (right - ringSize) midy

		create-glyph [MangleName 'invertedInputs'] [MangleUnicode 0x1CC17] : glyph-proc
			set-width MosaicWidth
			include : ForceUpright
			include : InvertRingAt (right - ringSize) (top - ringSize)
			include : InvertRingAt (right - ringSize) (bottom + ringSize)
			include : difference
				HBar.t left (right - ringSize) top boxDrawingStroke
				InvertRingAt (right - ringSize) (top - ringSize) 1
			include : difference
				HBar.b left (right - ringSize) bottom boxDrawingStroke
				InvertRingAt (right - ringSize) (bottom + ringSize) 1

		create-glyph [MangleName 'invertedOutput'] [MangleUnicode 0x1CC18] : glyph-proc
			set-width MosaicWidth
			include : ForceUpright
			include : InvertRingAt (left + ringSize) midy
			include : HBar.m (left + ringSize * 2 - fineStroke / 2) right midy boxDrawingStroke

	do "Buffer"
		create-glyph [MangleName 'bufferGate'] [MangleUnicode 0x1CC19] : glyph-proc
			set-width MosaicWidth
			include : ForceUpright
			include : HBar.m left midx midy boxDrawingStroke
			include : TriangleShape midx bottom midx top right midy boxDrawingStroke

		create-glyph [MangleName 'invertedBufferGate'] [MangleUnicode 0x1CC1A] : glyph-proc
			set-width MosaicWidth
			include : ForceUpright
			include : HBar.m left (midx - ringSize * 2 + fineStroke / 2) midy boxDrawingStroke
			include : InvertRingAt (midx - ringSize) midy
			include : TriangleShape midx bottom midx top right midy boxDrawingStroke
